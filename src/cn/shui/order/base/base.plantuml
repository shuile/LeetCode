@startuml

title __BASE's Class Diagram__\n

  namespace cn.shui.order {
    namespace base {
      class cn.shui.order.base.GraphNode {
          + neighbors : List<GraphNode>
          + val : int
          + GraphNode()
          + GraphNode()
          + GraphNode()
      }
    }
  }
  

  namespace cn.shui.order {
    namespace base {
      class cn.shui.order.base.ListNode {
          + val : int
          + ListNode()
          + ListNode()
          + ListNode()
      }
    }
  }
  

  namespace cn.shui.order {
    namespace base {
      class cn.shui.order.base.Node {
          + val : int
          + Node()
          + Node()
          + Node()
      }
    }
  }
  

  namespace cn.shui.order {
    namespace base {
      class cn.shui.order.base.Node1 {
          + val : int
          + Node1()
      }
    }
  }
  

  namespace cn.shui.order {
    namespace base {
      class cn.shui.order.base.Node2 {
          + children : List<Node2>
          - val : int
          + Node2()
          + Node2()
          + Node2()
      }
    }
  }
  

  namespace cn.shui.order {
    namespace base {
      class cn.shui.order.base.TreeNode {
          + val : int
          + TreeNode()
          + TreeNode()
          + TreeNode()
      }
    }
  }
  

  cn.shui.order.base.ListNode o-- cn.shui.order.base.ListNode : next
  cn.shui.order.base.Node o-- cn.shui.order.base.Node : left
  cn.shui.order.base.Node o-- cn.shui.order.base.Node : next
  cn.shui.order.base.Node o-- cn.shui.order.base.Node : right
  cn.shui.order.base.Node1 o-- cn.shui.order.base.Node1 : next
  cn.shui.order.base.Node1 o-- cn.shui.order.base.Node1 : random
  cn.shui.order.base.TreeNode o-- cn.shui.order.base.TreeNode : left
  cn.shui.order.base.TreeNode o-- cn.shui.order.base.TreeNode : right


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
